
//public class IOOptionPanel extends java.awt.Panel {
public class IOOptionPanel extends java.awt.Panel {

    private MainFrame frame;

    public IOOptionPanel(MainFrame mainFrame) {
        frame = mainFrame;
        initComponents();
        setFont(frame.getFrameFont());
    }

    public int getResultRequest() {
        int request = 0;
        if (boaColourizeCheckbox.getState() == true) {
            request = request | Costanza_Plugin.REQUEST_BOA_COLORIZER;
        }
        if (boaIntensityColourizeCheckbox.getState() == true) {
            request = request | Costanza_Plugin.REQUEST_BOA_INTENSITY_COLORIZER;
        }
        if (cellCenterMarkerOption.getState() == true) {
            request = request | Costanza_Plugin.REQUEST_CELL_MARKER;
        }
        if (workingStackCheckbox.getState() == true) {
            request = request | Costanza_Plugin.REQUEST_WORKING_STACK;
        }
        return request;
    }
    
    public void setBOARequest(Boolean b) {
        boaColourizeCheckbox.setState(b);
    }
    
    public void setBOAIntensityRequest(Boolean b) {
        boaIntensityColourizeCheckbox.setState(b);
    }
    
    public void setCellCenterRequest(Boolean b) {
        cellCenterMarkerOption.setState(b);
    }
    
    public void setWorkingStackRequest(Boolean b) {
        workingStackCheckbox.setState(b);
    }
    
    public boolean getSecondaryStackOption() {
        return secondaryStackCheckbox.getState();
    }

    public boolean getExtendedNeighborhoodOption() {
        return extendedNeighborhoodOption.getState();
    }

    public boolean getPlateauOption() {
        return plateauOption.getState();
    }

    public Integer getIntensityLevels() {
        return new Integer(intensityLevelsTextField.getText());
    }

    public void setSecondaryStackOption(Boolean b) {
        secondaryStackCheckbox.setState(b);
    }

    public void setExtendedNeighborhoodOption(Boolean b) {
        extendedNeighborhoodOption.setState(b);
    }

    public void setPlateauOption(Boolean b) {
        plateauOption.setState(b);
    }

    public void setIntensityLevels(Integer i) {
        intensityLevelsTextField.setText(i.toString());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainOptions = new java.awt.Label();
        extendedNeighborhoodOption = new java.awt.Checkbox();
        plateauOption = new java.awt.Checkbox();
        inputOptionsLabel = new java.awt.Label();
        secondaryStackCheckbox = new java.awt.Checkbox();
        outputOptionsLabel = new java.awt.Label();
        cellCenterMarkerOption = new java.awt.Checkbox();
        boaColourizeCheckbox = new java.awt.Checkbox();
        boaIntensityColourizeCheckbox = new java.awt.Checkbox();
        workingStackCheckbox = new java.awt.Checkbox();
        otherLabel = new java.awt.Label();
        label1 = new java.awt.Label();
        intensityLevelsTextField = new java.awt.TextField();

        setBackground(new java.awt.Color(245, 245, 245));
        setLayout(new java.awt.GridBagLayout());

        mainOptions.setFont(new java.awt.Font("Dialog", 1, 12));
        mainOptions.setText("Gradient descent options:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(mainOptions, gridBagConstraints);

        extendedNeighborhoodOption.setLabel("Use extended (box) neighborhood");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(extendedNeighborhoodOption, gridBagConstraints);

        plateauOption.setLabel("Mark intensity plateau with single maximum");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(plateauOption, gridBagConstraints);

        inputOptionsLabel.setFont(new java.awt.Font("Dialog", 1, 12));
        inputOptionsLabel.setText("Input options:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(inputOptionsLabel, gridBagConstraints);

        secondaryStackCheckbox.setLabel("Use secondary stack to measure intensity levels.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(secondaryStackCheckbox, gridBagConstraints);

        outputOptionsLabel.setFont(new java.awt.Font("Dialog", 1, 12));
        outputOptionsLabel.setText("Output options:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(outputOptionsLabel, gridBagConstraints);

        cellCenterMarkerOption.setLabel("Mark cell centers.");
        cellCenterMarkerOption.setState(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(cellCenterMarkerOption, gridBagConstraints);

        boaColourizeCheckbox.setLabel("Display basins of attractions (BOA).");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(boaColourizeCheckbox, gridBagConstraints);

        boaIntensityColourizeCheckbox.setLabel("Display basins of attractions according to measured intensity.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(boaIntensityColourizeCheckbox, gridBagConstraints);

        workingStackCheckbox.setLabel("Display internal working stack.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(workingStackCheckbox, gridBagConstraints);

        otherLabel.setFont(new java.awt.Font("Dialog", 1, 12));
        otherLabel.setText("Other options:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(otherLabel, gridBagConstraints);

        label1.setText("Number of intensity levels:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(label1, gridBagConstraints);

        intensityLevelsTextField.setColumns(3);
        intensityLevelsTextField.setText("255");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.ipadx = 8;
        add(intensityLevelsTextField, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Checkbox boaColourizeCheckbox;
    private java.awt.Checkbox boaIntensityColourizeCheckbox;
    private java.awt.Checkbox cellCenterMarkerOption;
    private java.awt.Checkbox extendedNeighborhoodOption;
    private java.awt.Label inputOptionsLabel;
    private java.awt.TextField intensityLevelsTextField;
    private java.awt.Label label1;
    private java.awt.Label mainOptions;
    private java.awt.Label otherLabel;
    private java.awt.Label outputOptionsLabel;
    private java.awt.Checkbox plateauOption;
    private java.awt.Checkbox secondaryStackCheckbox;
    private java.awt.Checkbox workingStackCheckbox;
    // End of variables declaration//GEN-END:variables
}
