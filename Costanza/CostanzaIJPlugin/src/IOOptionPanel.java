
public class IOOptionPanel extends java.awt.Panel {

	private MainFrame frame;

	public IOOptionPanel(MainFrame mainFrame) {
		frame = mainFrame;
		initComponents();
	}

	public int getResultRequest() {
		int request = 0;
		if (boaColourizeCheckbox.getState() == true) {
			request = request | Costanza_Plugin.REQUEST_BOA_COLORIZER;
		}
		if (boaIntensityColourizeCheckbox.getState() == true) {
			request = request | Costanza_Plugin.REQUEST_BOA_INTENSITY_COLORIZER;
		}
		if (cellCenterMarkerOption.getState() == true) {
			request = request | Costanza_Plugin.REQUEST_CELL_MARKER;
		}
		if (workingStackCheckbox.getState() == true) {
			request = request | Costanza_Plugin.REQUEST_WORKING_STACK;
		}
		return request;
	}
	
	public boolean	getSecondaryStackOption() {
		return secondaryStackCheckbox.getState();
	}
	

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        boaColourizeCheckbox = new java.awt.Checkbox();
        outputOptionsLabel = new java.awt.Label();
        cellCenterMarkerOption = new java.awt.Checkbox();
        boaIntensityColourizeCheckbox = new java.awt.Checkbox();
        inputOptionsLabel = new java.awt.Label();
        secondaryStackCheckbox = new java.awt.Checkbox();
        workingStackCheckbox = new java.awt.Checkbox();

        setLayout(new java.awt.GridBagLayout());

        boaColourizeCheckbox.setLabel("Display basins of attractions (BOA).");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(boaColourizeCheckbox, gridBagConstraints);

        outputOptionsLabel.setFont(new java.awt.Font("Dialog", 1, 12));
        outputOptionsLabel.setText("Output options:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(outputOptionsLabel, gridBagConstraints);

        cellCenterMarkerOption.setLabel("Mark cell centers.");
        cellCenterMarkerOption.setState(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(cellCenterMarkerOption, gridBagConstraints);

        boaIntensityColourizeCheckbox.setLabel("Display basins of attractions according to measured intensity.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        add(boaIntensityColourizeCheckbox, gridBagConstraints);

        inputOptionsLabel.setFont(new java.awt.Font("Dialog", 1, 12));
        inputOptionsLabel.setText("Input options:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(inputOptionsLabel, gridBagConstraints);

        secondaryStackCheckbox.setLabel("Use secondary stack to measure intensity levels.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(secondaryStackCheckbox, gridBagConstraints);

        workingStackCheckbox.setLabel("Display internal working stack.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(workingStackCheckbox, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Checkbox boaColourizeCheckbox;
    private java.awt.Checkbox boaIntensityColourizeCheckbox;
    private java.awt.Checkbox cellCenterMarkerOption;
    private java.awt.Label inputOptionsLabel;
    private java.awt.Label outputOptionsLabel;
    private java.awt.Checkbox secondaryStackCheckbox;
    private java.awt.Checkbox workingStackCheckbox;
    // End of variables declaration//GEN-END:variables
}
