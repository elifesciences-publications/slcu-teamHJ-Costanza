
import java.awt.GridBagConstraints;


//public class OptionPanel extends java.awt.Panel {
public class OptionPanel extends java.awt.Panel {

    ProcessorOptionPanel parentPanel;
    ProcessorOption processorOption;

    public OptionPanel(ProcessorOptionPanel parentPanel, ProcessorOption processorOption) {
        this.parentPanel = parentPanel;
        this.processorOption = processorOption;
        initComponents();
        scrollbar1.setPreferredSize(new java.awt.Dimension(17, 25));
        scrollbar1.setValue(1);
        processorNameLabel.setText(processorOption.getProcessorName());
        optionPanel.add(processorOption.getPanel());
    }

    public ProcessorOption getProcessorOption() {
        return processorOption;
    }

    ProcessorOptionPanel getParentPanel() {
        return parentPanel;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        processorNameLabel = new java.awt.Label();
        removeButton = new java.awt.Button();
        optionPanel = new java.awt.Panel();
        scrollbar1 = new java.awt.Scrollbar();

        setLayout(new java.awt.GridBagLayout());

        processorNameLabel.setFont(new java.awt.Font("Dialog", 1, 12));
        processorNameLabel.setText("processorName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(processorNameLabel, gridBagConstraints);

        removeButton.setLabel("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(removeButton, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(optionPanel, gridBagConstraints);
        optionPanel.getAccessibleContext().setAccessibleParent(optionPanel);

        scrollbar1.setBlockIncrement(1);
        scrollbar1.setMaximum(3);
        scrollbar1.setValue(1);
        scrollbar1.setVisibleAmount(0);
        scrollbar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scrollbar1MouseClicked(evt);
            }
        });
        scrollbar1.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                scrollbar1AdjustmentValueChanged(evt);
            }
        });
        add(scrollbar1, new java.awt.GridBagConstraints());

        getAccessibleContext().setAccessibleParent(this);
    }// </editor-fold>//GEN-END:initComponents
	private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
            parentPanel.removeOption(this);
	}//GEN-LAST:event_removeButtonActionPerformed

        private void scrollbar1AdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_scrollbar1AdjustmentValueChanged
           /*
            java.awt.Container parent = getParent();
            if(parent == null)
                return;
            java.awt.Component arr[] = parent.getComponents();
            int count = parent.getComponentCount();
            
            int n = 0;
            while (n < count && arr[n] != this) {
                ++n;
            }
            if (n == arr.length || count == 1) {
                return;
            }
            
            java.awt.GridBagConstraints constr = new java.awt.GridBagConstraints();
            constr.gridx = 0;
            constr.anchor = GridBagConstraints.WEST;

            int v = evt.getValue();
//            System.out.println("adjustment detected: " + evt.getAdjustmentType() + " " + v + "," + getProcessorOption().getProcessorName());
            if (evt.getAdjustmentType() == java.awt.event.AdjustmentEvent.UNIT_INCREMENT && v == 2) {
//                System.out.println("shift down");

                if (n < count - 1) {
                    parent.add(arr[n + 1], constr, n);
                    parent.add(this, constr, n + 1);
                    getParentPanel().swapOptions(n+1, n);
                }
            }
            else if (v == 0) {
//                System.out.println("shift up");
                if (evt.getAdjustmentType() == java.awt.event.AdjustmentEvent.UNIT_DECREMENT && n > 0) {
                    parent.add(arr[n - 1], constr, n);
                    parent.add(this, constr, n - 1);
                    getParentPanel().swapOptions(n-1, n);               
                }
            }

            evt.getAdjustable().setValue(1);
            parent.validate();
            //* */
        }//GEN-LAST:event_scrollbar1AdjustmentValueChanged

        private void scrollbar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scrollbar1MouseClicked
//            System.out.println(evt.paramString());
//            if(!isValid())
//            {
//                System.out.println("component invalid");
//                return;
//            }
            java.awt.Container parent = getParent();
            java.awt.Component arr[] = parent.getComponents();
            int count = parent.getComponentCount();
            
            int n = 0;
            while (n < count && arr[n] != this) {
                ++n;
            }
            if (n == arr.length || count == 1) {
                return;
            }
            
            java.awt.GridBagConstraints constr = new java.awt.GridBagConstraints();
            constr.gridx = 0;
            constr.anchor = GridBagConstraints.WEST;

            int v = scrollbar1.getValue();
//            System.out.println( v + "," + getProcessorOption().getProcessorName());
            if (v == 2) {
//                System.out.println("shift down");

                if (n < count - 1) {
                    parent.add(arr[n + 1], constr, n);
                    parent.add(this, constr, n + 1);
                    getParentPanel().swapOptions(n+1, n);
                }
            }
            else if (v == 0) {
//                System.out.println("shift up");
                if ( n > 0) {
                    parent.add(arr[n - 1], constr, n);
                    parent.add(this, constr, n - 1);
                    getParentPanel().swapOptions(n-1, n);               
                }
            }

            scrollbar1.setValue(1);
            parent.validate();
 //* */
        }//GEN-LAST:event_scrollbar1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Panel optionPanel;
    private java.awt.Label processorNameLabel;
    private java.awt.Button removeButton;
    private java.awt.Scrollbar scrollbar1;
    // End of variables declaration//GEN-END:variables
}
