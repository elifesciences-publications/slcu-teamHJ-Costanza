
import costanza.Job;
import costanza.Queue;

public class AlgorithmPanel extends java.awt.Panel {

	private MainPanel mainPanel;

	AlgorithmPanel(MainPanel mainPanel) {
		initComponents();
		this.mainPanel = mainPanel;
	}

	void addInverterJob(Queue jobs) throws Exception {
		if (invertCheckbox.getState() == true) {
			jobs.addJob(new Job("invert", null));
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        invertCheckbox = new java.awt.Checkbox();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        invertCheckbox.setBackground(java.awt.Color.white);
        invertCheckbox.setLabel("Invert image(s) before processing.");
        add(invertCheckbox);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Checkbox invertCheckbox;
    // End of variables declaration//GEN-END:variables
}
